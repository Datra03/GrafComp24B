Importamos las librerias necesarias
import numpy as np
import matplotlib.pyplot as plt
Creamos un plano cartesiano el cual mostrara un vector:
'1 y 2': Posocion ce la flecha;
'3 y 4': Hasta donde se extiende
plt.quiver(1,2,3,4, scale_units='xy', angles='xy', scale=1)
plt.xlim(0,4)
plt.ylim(0,8)
(0.0, 8.0)

Agrega limites del eje
plt.quiver(1,2,3,4, scale_units='xy', angles='xy', scale=1)
plt.xlim(0,4)
plt.ylim(0,8)

plt.axvline(x=1)
plt.axhline(y=1)

plt.axvline(x=1+3)
plt.axhline(y=2+4)
<matplotlib.lines.Line2D at 0x217e33d8550>

Crea 2 vectores a partir de un mismo origen
plt.quiver([0,0], [0,0], [1,2], [4,2], scale_units='xy', angles='xy', scale=1)
plt.xlim(0,4)
plt.ylim(0,4)

(0.0, 4.0)

Crea 2 vectoores independientes
plt.quiver([1,0], [2,0], [1,2], [3,2], scale_units='xy', angles='xy', scale=1)
plt.xlim(0,4)
plt.ylim(0,6)
(0.0, 6.0)

A los vetores anteriores les agrega un limite en el inicio y en la punta de la flecha
plt.quiver([1,0], [2,0], [1,2], [3,2], scale_units='xy', angles='xy', scale=1)
plt.xlim(0,4)
plt.ylim(0,6)

plt.axvline(x=1, color='gray', linestyle='--', alpha=0.3)
plt.axhline(y=2, color='gray', linestyle='--', alpha=0.3)

plt.axvline(x=2, color='gray', linestyle='--', alpha=0.3)
plt.axhline(y=2, color='gray', linestyle='--', alpha=0.3)

plt.axvline(x=2, color='gray', linestyle='--', alpha=0.3)
plt.axhline(y=5, color='gray', linestyle='--', alpha=0.3)
<matplotlib.lines.Line2D at 0x217e391beb0>

v1 = np.array([1,2])
v2 = np.array([3,4])

plt.quiver([0,0], [0,0], [v1[0],v2[0]], [v1[1],v2[1]], angles='xy', scale_units='xy', scale=1)
plt.xlim(0, max(v1[0], v2[0]))
plt.ylim(0, max(v1[1], v2[1]))
(0.0, 4.0)

v1 = np.array([1,2])
v2 = np.array([3,4])

plt.quiver([0,0], [0,0], [v1[0],v2[0]], [v1[1],v2[1]], angles='xy', scale_units='xy', scale=1)
plt.xlim(0, max(v1[0], v2[0]))
plt.ylim(0, max(v1[1], v2[1]))

plt.axvline(x=1, color='gray', linestyle='--', alpha=0.3)
plt.axhline(y=2, color='gray', linestyle='--', alpha=0.3)

plt.axvline(x=3, color='gray', linestyle='--', alpha=0.3)
plt.axhline(y=4, color='gray', linestyle='--', alpha=0.3)
<matplotlib.lines.Line2D at 0x217e4994a00>

def grafvecs(vecs, cols):
    plt.figure(figsize=(5,5))
    
    for i in range(len(vecs)):
        vec=vecs[i]
        plt.quiver(0,0, vec[0], vec[1], color=cols[i], angles='xy', scale_units='xy', scale=1)
v1 = np.array([1,2])
v2 = np.array([3,4])

grafvecs ([v1, v2], ['black', 'blue'])
plt.xlim(0, max(v1[0], v2[0]))
plt.ylim(0, max(v1[1], v2[1]))

(0.0, 4.0)

Podemos agregar tantos vectores como queramos, solo debemos de indigar su magnitud, podemos darle color a cada vector de forma independiente
v1 = np.array([1,2])
v2 = np.array([3,4])
v3 = np.array([8,4])

grafvecs ([v1, v2, v3], ['red', 'green', 'purple'])
plt.xlim(0, max(v1[0], v2[0], v3[0]))
plt.ylim(0, max(v1[1], v2[1], v3[1]))
(0.0, 4.0)


